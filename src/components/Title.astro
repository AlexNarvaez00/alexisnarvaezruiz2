---
interface Props{  
  level:string;
  class?:string;
  id?:string
}

const { level,...props } = Astro.props;

const levelsClasses = {
  'h1' : `text-3xl md:text-5xl text-gray-800 font-bold`,
  'h2' : `text-2xl md:text-4xl text-gray-800 font-semibold`,
  'h3' : `text-xl md:text-3xl font-semibold`,
  'h4' : `text-lg md:text-xl text-gray-800 font-semibold`,
  'h5' : `text-md md:text-lg text-gray-800 font-semibold`,
  'h6' : `text-base md:text-md text-gray-800 font-semibold`,
};

---

{ level == 'h1' ? <h1 class={`${levelsClasses[level]} ${Astro.props.class}`} {...props}><slot/></h1> : null }
{ level == 'h2' ? <h2 class={`${levelsClasses[level]} ${Astro.props.class}`} {...props}><slot/></h2> : null }
{ level == 'h3' ? <h3 class={`${levelsClasses[level]} ${Astro.props.class}`} {...props}><slot/></h3> : null }
{ level == 'h4' ? <h4 class={`${levelsClasses[level]} ${Astro.props.class}`} {...props}><slot/></h4> : null }
{ level == 'h5' ? <h5 class={`${levelsClasses[level]} ${Astro.props.class}`} {...props}><slot/></h5> : null }
{ level == 'h6' ? <h6 class={`${levelsClasses[level]} ${Astro.props.class}`} {...props}><slot/></h6> : null }
